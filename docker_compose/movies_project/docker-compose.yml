version: '3'

networks:
  movies_network:
    driver: bridge

services:
  nginx:
    container_name: websrv_movies
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d/:ro
      - ./static:/var/www/static

    ports:
      - "80:80" 
    depends_on:
      - app
    networks:
      - movies_network

  app:
    build: ./app
    container_name: backend_movies
    user: web
    expose:
      - "8000"
    environment:
      - DEBUG=True
      - SECRET_KEY="django-insecure-^asw*0e^9@l8%=s12&&e)#1^gkpy&t^x7oa$$&(pble4lg(mic"
      - IP_ADDRESSES=127.0.0.1,0.0.0.0
      - DB_HOST=postgredb
      - DB_USER='app'
      - DB_PASSWORD='123qwe'
      - DB_NAME='movies_database'
      - PYTHONDONTWRITEBYTECODE=1
      - DJANGO_SETTINGS_MODULE
      - UWSGI_PROCESSES=1
      - UWSGI_THREADS=16
      - UWSGI_HARAKIRI=240
    volumes:
      - ./static:/opt/app/static_root
    networks:
      - movies_network

    depends_on:
        postgredb:
          condition: service_healthy

  postgredb:
    build: ./postgredb
    container_name: postgres_movies
    env_file:
      - postgredb/.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready","--username=${DB_USER}", "--dbname=${DB_NAME}","--timeout=15"]
      interval: 15s
      timeout: 30s
      retries: 16
      start_period: 20s
    networks:
      - movies_network