version: '3'

networks:
  movies_network:
    driver: bridge



services:
  nginx:
    container_name: websrv_movies
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d/:ro
      - ./static:/var/www/static

    ports:
      - "80:80" 
    depends_on:
      - app
    networks:
      - movies_network

  app:
    build: ./app
    container_name: backend_movies
    user: web
    ports:
      - 8000:8000
    env_file:
      - app/config/.env
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - DJANGO_SETTINGS_MODULE
      - UWSGI_PROCESSES=1
      - UWSGI_THREADS=16
      - UWSGI_HARAKIRI=240
      - DB_HOST=postgredb
    volumes:
      - ./static:/opt/app/static_root
    networks:
      - movies_network

    depends_on:
        postgredb:
          condition: service_healthy

  postgredb:
    build: ./postgredb
    container_name: postgres_movies
    env_file:
      - postgredb/.env.db
    environment:
      - POSTGRES_DB=movies_database
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=123qwe
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready","--username=app", "--dbname=movies_database","--timeout=15"]
      interval: 15s
      timeout: 30s
      retries: 16
      start_period: 20s
    networks:
      - movies_network